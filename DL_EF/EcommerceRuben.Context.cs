//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EcommerceRubenEntities : DbContext
    {
        public EcommerceRubenEntities()
            : base("name=EcommerceRubenEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVentas { get; set; }
        public virtual DbSet<SubCategoria> SubCategorias { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<Producto> Productoes { get; set; }
    
        public virtual ObjectResult<CategoriaGetAll_Result> CategoriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriaGetAll_Result>("CategoriaGetAll");
        }
    
        public virtual int DetalleVentaAdd(Nullable<int> idVenta, Nullable<int> idProducto, Nullable<int> cantidad)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVentaAdd", idVentaParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<DetalleVentaGetAllInner_Result> DetalleVentaGetAllInner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleVentaGetAllInner_Result>("DetalleVentaGetAllInner");
        }
    
        public virtual int ProductoAddImagen(string nombre, string descripcion, string paisOrigen, Nullable<decimal> precio, Nullable<int> idSubCategoria, string imagen, Nullable<int> stock)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var paisOrigenParameter = paisOrigen != null ?
                new ObjectParameter("PaisOrigen", paisOrigen) :
                new ObjectParameter("PaisOrigen", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idSubCategoriaParameter = idSubCategoria.HasValue ?
                new ObjectParameter("IdSubCategoria", idSubCategoria) :
                new ObjectParameter("IdSubCategoria", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoAddImagen", nombreParameter, descripcionParameter, paisOrigenParameter, precioParameter, idSubCategoriaParameter, imagenParameter, stockParameter);
        }
    
        public virtual int ProductoDelete(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoDelete", idProductoParameter);
        }
    
        public virtual ObjectResult<ProductoGetAllInnerJoin_Result> ProductoGetAllInnerJoin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAllInnerJoin_Result>("ProductoGetAllInnerJoin");
        }
    
        public virtual int ProductoStock(Nullable<int> idProducto, Nullable<int> stock)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoStock", idProductoParameter, stockParameter);
        }
    
        public virtual ObjectResult<SubCategoriaGetByIdCategoria_Result> SubCategoriaGetByIdCategoria(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubCategoriaGetByIdCategoria_Result>("SubCategoriaGetByIdCategoria", idCategoriaParameter);
        }
    
        public virtual int VentaAddSP(ObjectParameter idVenta, Nullable<decimal> total, Nullable<int> idCliente)
        {
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaAddSP", idVenta, totalParameter, idClienteParameter);
        }
    
        public virtual ObjectResult<ProductoGetById_Result1> ProductoGetById(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetById_Result1>("ProductoGetById", idProductoParameter);
        }
    
        public virtual ObjectResult<SubCategoriaGetAll_Result> SubCategoriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubCategoriaGetAll_Result>("SubCategoriaGetAll");
        }
    
        public virtual ObjectResult<VentasGetAll_Result2> VentasGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasGetAll_Result2>("VentasGetAll");
        }
    
        public virtual int ProductoUpdate(Nullable<int> idProducto, string nombre, string descripcion, string paisOrigen, Nullable<decimal> precio, Nullable<int> idSubCategoria, string imagen, Nullable<int> stock)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var paisOrigenParameter = paisOrigen != null ?
                new ObjectParameter("PaisOrigen", paisOrigen) :
                new ObjectParameter("PaisOrigen", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idSubCategoriaParameter = idSubCategoria.HasValue ?
                new ObjectParameter("IdSubCategoria", idSubCategoria) :
                new ObjectParameter("IdSubCategoria", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoUpdate", idProductoParameter, nombreParameter, descripcionParameter, paisOrigenParameter, precioParameter, idSubCategoriaParameter, imagenParameter, stockParameter);
        }
    
        public virtual ObjectResult<ProductoGetAll_Result1> ProductoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAll_Result1>("ProductoGetAll");
        }
    
        public virtual int ProductoAlta(Nullable<int> idProducto, Nullable<bool> status)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoAlta", idProductoParameter, statusParameter);
        }
    
        public virtual int ProductoBaja(Nullable<int> idProducto, Nullable<bool> status)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoBaja", idProductoParameter, statusParameter);
        }
    
        public virtual ObjectResult<ProductoGetAllInnerJoin2_Result> ProductoGetAllInnerJoin2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAllInnerJoin2_Result>("ProductoGetAllInnerJoin2");
        }
    }
}
